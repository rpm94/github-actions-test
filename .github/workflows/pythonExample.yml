# This is a basic workflow to help you get started with Actions

name: Getting-started

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install Python 3.x
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with: 
         # Semantic version range syntax or exact version of a Python version
         python-version: '3.x'
         # Optional - x64 or x86 architecture, defaults to x64
         architecture: 'x64'
      #Install dependencies   
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools
      
      # Install and test with pytest
      - name: Test with pytest
        run: |
         pip install pytest
         pip install pytest-cov
         pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html


      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo what is in this directory?
          ls -a
          echo
          echo is Python installed?
          python --version
          echo
          echo is git installed?
          git --version
          echo
